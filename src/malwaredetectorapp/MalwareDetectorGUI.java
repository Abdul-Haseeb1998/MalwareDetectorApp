/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package malwaredetectorapp;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class MalwareDetectorGUI {
    private JFrame frame;
    private Blockchain blockchain;
    private MalwareSignatureManager signatureManager;

    public MalwareDetectorGUI() {
        initialize();
        blockchain = new Blockchain();
        signatureManager = new MalwareSignatureManager();

        displayMainMenu();
    }

    private void initialize() {
        frame = new JFrame();
        frame.setTitle("Malware Detection Tool");
        frame.getContentPane().setBackground(new Color(135, 206, 235));
        frame.setExtendedState(JFrame.MAXIMIZED_BOTH);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.getContentPane().setLayout(new BorderLayout());
    }

    private void displayMainMenu() {
        JPanel panel = new JPanel();
        panel.setLayout(new FlowLayout(FlowLayout.CENTER, 10, 10));
        panel.setBackground(new Color(135, 206, 235));

        JLabel titleLabel = new JLabel("Malware Detection Tool");
        titleLabel.setFont(new Font("Arial", Font.BOLD, 30));
        titleLabel.setForeground(Color.BLACK);
        panel.add(titleLabel);

        JButton addSignatureButton = new JButton("Add Malware Signature");
        addSignatureButton.setFont(new Font("Arial", Font.BOLD, 18));
        addSignatureButton.setForeground(Color.WHITE);
        addSignatureButton.setBackground(Color.BLACK);
        addSignatureButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                displayAddSignatureDialog();
            }
        });
        panel.add(addSignatureButton);

        JButton checkForMalwareButton = new JButton("Check for Malware");
        checkForMalwareButton.setFont(new Font("Arial", Font.BOLD, 18));
        checkForMalwareButton.setForeground(Color.WHITE);
        checkForMalwareButton.setBackground(Color.BLACK);
        checkForMalwareButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                displayMalwareDetectionDialog();
            }
        });
        panel.add(checkForMalwareButton);

        frame.getContentPane().add(panel, BorderLayout.CENTER);
        frame.setVisible(true);
    }

    private void displayAddSignatureDialog() {
        JFrame dialogFrame = new JFrame();
        dialogFrame.setTitle("Add Malware Signature");
        dialogFrame.getContentPane().setBackground(new Color(135, 206, 235));
        dialogFrame.setBounds(600, 300, 400, 200);
        dialogFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        dialogFrame.getContentPane().setLayout(null);

        JTextField signatureTextField = new JTextField();
        signatureTextField.setBounds(20, 30, 300, 30);

        JButton submitButton = new JButton("Submit");
        submitButton.setBounds(140, 80, 100, 30);
        submitButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String signature = signatureTextField.getText();
                if (!signature.isEmpty()) {
                    signatureManager.addSignature(signature);
                    JOptionPane.showMessageDialog(dialogFrame, "Malware signature added successfully!");
                    dialogFrame.dispose();
                } else {
                    JOptionPane.showMessageDialog(dialogFrame, "Please enter a valid signature!");
                }
            }
        });

        dialogFrame.getContentPane().add(signatureTextField);
        dialogFrame.getContentPane().add(submitButton);

        dialogFrame.setVisible(true);
    }

    private void displayMalwareDetectionDialog() {
        JFrame dialogFrame = new JFrame();
        dialogFrame.setTitle("Check for Malware");
        dialogFrame.getContentPane().setBackground(new Color(135, 206, 235));
        dialogFrame.setBounds(600, 300, 400, 200);
        dialogFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        dialogFrame.getContentPane().setLayout(null);

        JTextField filePathTextField = new JTextField();
        filePathTextField.setBounds(20, 30, 300, 30);

        JButton integrityCheckButton = new JButton("Integrity Check");
        integrityCheckButton.setBounds(50, 80, 130, 30);
        integrityCheckButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String filePath = filePathTextField.getText();
                if (!filePath.isEmpty()) {
                    boolean isMalwareDetected = FileScanner.integrityCheck(filePath, signatureManager);
                    handleMalwareDetectionResult(dialogFrame, isMalwareDetected);
                } else {
                    JOptionPane.showMessageDialog(dialogFrame, "Please enter a file path!");
                }
            }
        });

        JButton topAndTailScanButton = new JButton("Top and Tail Scan");
        topAndTailScanButton.setBounds(200, 80, 130, 30);
        topAndTailScanButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String filePath = filePathTextField.getText();
                if (!filePath.isEmpty()) {
                    boolean isMalwareDetected = FileScanner.topAndTailScan(filePath, signatureManager);
                    handleMalwareDetectionResult(dialogFrame, isMalwareDetected);
                } else {
                    JOptionPane.showMessageDialog(dialogFrame, "Please enter a file path!");
                }
            }
        });

        dialogFrame.getContentPane().add(filePathTextField);
        dialogFrame.getContentPane().add(integrityCheckButton);
        dialogFrame.getContentPane().add(topAndTailScanButton);

        dialogFrame.setVisible(true);
    }

    private void handleMalwareDetectionResult(JFrame dialogFrame, boolean isMalwareDetected) {
        if (isMalwareDetected) {
            int option = JOptionPane.showOptionDialog(dialogFrame, "Malware detected! What would you like to do?",
                    "Malware Detected", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE, null,
                    new String[]{"Remove Malware", "Delete File"}, null);

            if (option == JOptionPane.YES_OPTION) {
                FileScanner.removeMalwareFromCurrentFile();
                JOptionPane.showMessageDialog(dialogFrame, "Malware removed successfully!");
            } else if (option == JOptionPane.NO_OPTION) {
                blockchain.addMalwareRecord(signatureManager.getLastDetectedSignature(), FileScanner.getCurrentFilePath());
                JOptionPane.showMessageDialog(dialogFrame, "Malware record added to blockchain!");
            }
        } else {
            JOptionPane.showMessageDialog(dialogFrame, "No malware detected.");
        }
    }
}
